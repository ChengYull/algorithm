#include "graph_adjacency_list.cpp"
#include "unordered_set"


/*深度优先遍历辅助函数*/
void dfs(GraphAdjList &graph, unordered_set<Vertex*> &visited, vector<Vertex*> &res, Vertex * vet){
	res.push_back(vet);		// 记录访问顶点
	visited.emplace(vet);		// 标记该顶点已被访问
	
	// 遍历该顶点的所有邻接顶点
	for (Vertex* adjVet : graph.adjList[vet]){
		if (visited.count(adjVet))
			continue; // 跳过已被访问的顶点
		// 递归访问邻接顶点
		dfs(graph, visited, res, adjVet);
	}
}
/*深度优先遍历*/
// 使用邻接表来表示图，以便获取指定顶点的邻接顶点
vector<Vertex*> graphDFS(GraphAdjList &graph, Vertex* startVet){
	// 顶点遍历序列
	vector<Vertex*> res;
	// 哈希表，用于记录被访问过的顶点
	unordered_set<Vertex*> visted;
	dfs(graph, visted, res, startVet);
	return res;
}